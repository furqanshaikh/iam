"use strict";(self.webpackChunkiam=self.webpackChunkiam||[]).push([[5994],{5917:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"/first-post","metadata":{"permalink":"/iam/blog/first-post","source":"@site/blog/first-post.md","title":"first-post","description":"","date":"2024-10-06T12:50:39.955Z","tags":[],"readingTime":0,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"nextItem":{"title":"Identity Model in IdentityIQ","permalink":"/iam/blog/2024/09/20/iiq-identity-model"}},"content":""},{"id":"/2024/09/20/iiq-identity-model","metadata":{"permalink":"/iam/blog/2024/09/20/iiq-identity-model","source":"@site/blog/2024-09-20-iiq-identity-model.md","title":"Identity Model in IdentityIQ","description":"Discussion on Identity Model","date":"2024-09-20T00:00:00.000Z","tags":[],"readingTime":3.64,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"post","title":"Identity Model in IdentityIQ"},"unlisted":false,"prevItem":{"title":"first-post","permalink":"/iam/blog/first-post"},"nextItem":{"title":"CyberArk SCIM Server Authentication Using Credential Files","permalink":"/iam/blog/2024/09/19/CyberArk SCIM Server Authentication Using Credential Files"}},"content":"## Discussion on Identity Model\\r\\n\\r\\nThe sources offer a detailed look at the **Identity Model** within IdentityIQ, a pre-built structure that simplifies how workflows interact with identity data, particularly in forms. Let\'s explore its significance, structure, and usage.\\r\\n\\r\\n**Why is the Identity Model important?**\\r\\n\\r\\nWorkflows in IdentityIQ often revolve around making changes to identities. Before the Identity Model, managing identity data within workflows, especially when using forms, was cumbersome. Each attribute required separate handling:\\r\\n\\r\\n*   Defining individual business process variables for each attribute.\\r\\n*   Passing each variable to and from the approval workflow.\\r\\n*   Defining each variable as a form argument.\\r\\n\\r\\nThis approach led to complexity and increased the potential for errors.\\r\\n\\r\\nThe Identity Model solves these problems by representing the entire Identity as a single, manageable unit within a workflow. It acts as a container holding all relevant identity data, streamlining how workflows interact with this data, particularly in forms.\\r\\n\\r\\n**How does the Identity Model work?**\\r\\n\\r\\nThe Identity Model is essentially a map (a collection of key-value pairs) populated with various identity attributes and related information. You can access this model within workflows through a dedicated library method called `getIdentityModel`.\\r\\n\\r\\n**What are the key components of the Identity Model?**\\r\\n\\r\\nThe Identity Model includes a comprehensive set of entries representing various facets of an identity:\\r\\n\\r\\n*   **Standard and Extended Identity Attributes:**  This includes all basic identity attributes like first name, last name, email, manager, etc., along with any custom extended attributes defined in your IdentityIQ installation. Most are stored as strings, with multi-valued attributes represented as lists.\\r\\n*   **Role Information:** Includes lists for both `detectedRoles` and `assignedRoles`, providing insights into the roles associated with the identity.\\r\\n*   **Manager Details:** Stores the manager\'s name as a string and provides a separate `info map` with additional manager information, including their ID, name, and display name.\\r\\n*   **Time-Related Data:** Includes dates for `lastRefresh`, `lastLogin`, and `passwordExpiration`, offering temporal context to the identity\'s activity.\\r\\n*   **Flags and Status Information:** Contains boolean flags like `isWorkgroup`, `managerStatus`, `correlated`, and `correlatedOverriden`, along with information about assigned scopes and transformer options.\\r\\n*   **Object Class Information:** Stores the class of the object (`sailpoint.object.Identity`) and the transformer class (`sailpoint.transformer.IdentityTransformer`) used for data manipulation.\\r\\n\\r\\n**How do I use the Identity Model in my workflows?**\\r\\n\\r\\nHere\'s a step-by-step guide on utilizing the Identity Model:\\r\\n\\r\\n1.  **Define Process Variable:** Create a process variable within your workflow (e.g., `identityModel`) to store the Identity Model.\\r\\n2.  **Initialize and Populate:** In an early workflow step, call the `getIdentityModel` method from the `IdentityLibrary` to initialize and populate the `identityModel` variable. You can pass an identity name or ID as an argument to pre-populate the model with existing identity data.\\r\\n3.  **Link to Form:** In the approval step containing your form, create an argument (e.g., `workItemFormBasePath`) and set its value to the `identityModel` variable. This creates a bridge between the form and the Identity Model, allowing data exchange.\\r\\n4.  **Reference Attributes:** Within the form, directly reference attributes from the `identityModel` as if they were individual variables (e.g., use \\"firstname\\" instead of \\"identityModel.firstname\\").\\r\\n5.  **Process Changes:** After form submission, utilize the `buildPlanFromIdentityModel()` method to compare the initial and modified versions of the `identityModel`, identifying differences and automatically generating a provisioning plan to implement changes.\\r\\n\\r\\n**Example:**\\r\\n\\r\\nConsider a scenario where a workflow form needs to display and allow editing of ten identity attributes. Without the Identity Model, you would manage ten separate variables. The Identity Model simplifies this by storing all attributes within a single `identityModel` variable. When the form loads, it accesses and displays these attributes. After the user edits and submits the form, the workflow compares the updated `identityModel` with its original state and provisions any necessary changes to the identity object. This streamlined process reduces complexity and potential errors.\\r\\n\\r\\n**Additional Notes:**\\r\\n\\r\\n*   While the sources focus on the Identity Model\'s role in workflows and forms, its utility may extend to other areas where streamlined identity data management is beneficial.\\r\\n\\r\\n*   The sources provide a basic outline and usage pattern for the Identity Model. Further customization and advanced implementations might require deeper exploration of IdentityIQ\'s API documentation and potentially involve custom coding.\\r\\n\\r\\nBy incorporating the Identity Model, IdentityIQ empowers organizations to handle identity data within workflows more efficiently, especially when forms are involved. It reduces the complexity of managing individual attributes, simplifies form interactions, and ultimately leads to a more robust and maintainable identity management system."},{"id":"/2024/09/19/CyberArk SCIM Server Authentication Using Credential Files","metadata":{"permalink":"/iam/blog/2024/09/19/CyberArk SCIM Server Authentication Using Credential Files","source":"@site/blog/2024-09-19-CyberArk SCIM Server Authentication Using Credential Files.md","title":"CyberArk SCIM Server Authentication Using Credential Files","description":"CyberArk SCIM Server Authentication Using Credential Files","date":"2024-09-19T00:00:00.000Z","tags":[],"readingTime":3.15,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"post","title":"CyberArk SCIM Server Authentication Using Credential Files"},"unlisted":false,"prevItem":{"title":"Identity Model in IdentityIQ","permalink":"/iam/blog/2024/09/20/iiq-identity-model"},"nextItem":{"title":"Integrating SailPoint with CyberArk Using SCIM Server Without AIM Credential Provider","permalink":"/iam/blog/2024/09/19/Sailpoint-CyberArk-Integration"}},"content":"### CyberArk SCIM Server Authentication Using Credential Files\\r\\n\\r\\nThe CyberArk SCIM server can authenticate to the CyberArk Vault using credential files, which is CyberArk\'s recommended method for enhanced security. This method avoids storing passwords directly and instead uses dynamically rotated credentials retrieved on demand.\\r\\n\\r\\nHere\'s how the process works:\\r\\n\\r\\n1. **Credential File Creation:**\\r\\n   *   First, you need to identify the username associated with the SCIM-account object in the SCIM Config safe. This information is stored in the \\"UserName\\" file category property of the SCIM-account object.\\r\\n   *   Next, create a credential file using the CyberArk `CreateCredFile` utility. The file name should be the same as the username identified in the previous step, with a \\".cred\\" extension. For example, if the username is \\"SCIM-user\\", the credential file should be named \\"SCIM-user.cred\\".\\r\\n   *   The `CreateCredFile` utility takes several parameters, including the username, password, hostname, and entropy file. The specific command to create the credential file is provided in the sources.\\r\\n2. **Credential File Placement:** Once the credential file is created, it needs to be placed in the `c:\\\\CyberArk-SCIM` folder along with its associated entropy file.\\r\\n3. **SCIM Server Authentication:** When the SCIM server needs to authenticate to the Vault, it first checks for a credential file with the name \\"SCIM-user.cred\\" in the `c:\\\\CyberArk-SCIM` directory. If this file is found, the SCIM server uses the username from the credential file and the credential itself to authenticate to the Vault. The AIM Credential Provider is not used in this scenario.\\r\\n4. **Automatic Password Change:** When using credential files, the automatic password change feature is enabled. This means that every time the SCIM server logs into the Vault, a new randomized password is generated and updated in both the authentication file and the Vault.\\r\\n\\r\\n**Fallback Mechanism:**\\r\\n\\r\\nIf a credential file named \\"SCIM-user.cred\\" is not found, the SCIM server will attempt to authenticate using the AIM Credential Provider.\\r\\n\\r\\n**Log Verification:**\\r\\n\\r\\nThe sources provide examples of debug and trace logs that can be used to verify whether the SCIM server is using a credential file or the AIM Credential Provider for authentication.\\r\\n\\r\\n**Additional Notes:**\\r\\n\\r\\n*   The sources highlight that using the default authentication method (user-password credentials stored in the vault) can expose the password in Windows Audits if this feature is enabled at the OS level.\\r\\n*   For existing SCIM server installations (version 1.3.4 and earlier), CyberArk recommends upgrading to version 1.3.5 or later to take advantage of the credential file authentication method.\\r\\n\\r\\nBy using credential files, the CyberArk SCIM server benefits from a more secure authentication method, reducing the risks associated with storing and managing passwords directly.\\r\\n\\r\\n\\r\\n### What are the two internal authentication methods available for the CyberArk SCIM server?\\r\\n\\r\\nThe two internal authentication methods available for the CyberArk SCIM server are:\\r\\n\\r\\n*   **CyberArk Credential Files (Recommended):** This method, introduced in SCIM version 1.3.5, enhances security by using dynamically rotated credentials instead of a stored password. CyberArk recommends this method.\\r\\n\\r\\n    To implement this method, a credential file containing the username from the SCIM-account object must be created and stored in the `c:\\\\CyberArk-SCIM` folder. When the SCIM server needs to authenticate to the Vault, it will prioritize using this credential file over the AIM Credential Provider.\\r\\n*   **Username-password credentials stored in the vault (default):** This method uses the AIM Credential Provider to retrieve the username and password for the SCIM server from the CyberArk Vault. This method is the default but is less secure than using credential files because it requires storing the password in the Vault. The sources note that this method can expose the password in the Windows audit logs if Windows Audits is enabled at the OS level.\\r\\n\\r\\nThe sources recommend using credential files over the AIM Credential Provider and suggest upgrading to SCIM Server version 1.3.5 or later to utilize this authentication method."},{"id":"/2024/09/19/Sailpoint-CyberArk-Integration","metadata":{"permalink":"/iam/blog/2024/09/19/Sailpoint-CyberArk-Integration","source":"@site/blog/2024-09-19-Sailpoint-CyberArk-Integration.md","title":"Integrating SailPoint with CyberArk Using SCIM Server Without AIM Credential Provider","description":"Introduction","date":"2024-09-19T00:00:00.000Z","tags":[],"readingTime":3.215,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"post","title":"Integrating SailPoint with CyberArk Using SCIM Server Without AIM Credential Provider"},"unlisted":false,"prevItem":{"title":"CyberArk SCIM Server Authentication Using Credential Files","permalink":"/iam/blog/2024/09/19/CyberArk SCIM Server Authentication Using Credential Files"},"nextItem":{"title":"Configuring a Private Server for IdentityIQ\'s Microsoft Teams Service Code","permalink":"/iam/blog/2024/07/22/sailpoint-teams-integration"}},"content":"### Introduction\\r\\n\\r\\nIntegrating SailPoint with CyberArk allows for streamlined identity governance and privileged access management (PAM). With CyberArk\'s SCIM (System for Cross-domain Identity Management) server, organizations can manage privileged accounts and users in SailPoint without relying on the AIM Credential Provider. This post will walk you through the steps of setting up a SailPoint-CyberArk integration using the SCIM server, enabling you to query, modify, and manage privileged data without the AIM Credential Provider.\\r\\n\\r\\n---\\r\\n\\r\\n### Prerequisites\\r\\n\\r\\nBefore starting the integration, ensure the following components are installed:\\r\\n\\r\\n#### CyberArk Requirements:\\r\\n- CyberArk SCIM Server v1.3.5 or above\\r\\n- CyberArk Vault (with PACLI for querying and managing privileged data)\\r\\n\\r\\n#### SailPoint Requirements:\\r\\n- SailPoint IdentityIQ v7.1 patch 2 or above\\r\\n- SailPoint PAM Module\\r\\n\\r\\n#### System Requirements:\\r\\n- **Windows Server 2016 or 2019**\\r\\n- **Java Version 1.8 (64-bit OpenJDK recommended)**\\r\\n- **8-core Processor, 32 GB RAM**\\r\\n\\r\\n---\\r\\n\\r\\n### Step-by-Step Guide\\r\\n\\r\\n#### 1. **Download and Set Up SCIM Server**\\r\\n\\r\\n1. Download the CyberArk SCIM distribution from the CyberArk Marketplace.\\r\\n2. Extract the contents from the zip file and move the `CyberArk-SCIM` folder to your `C:\\\\` drive.\\r\\n3. Verify that the folder contains essential files:\\r\\n    - `CAScimServer-<version>.jar`\\r\\n    - `PACLI`\\r\\n    - Configuration files (e.g., `config.yml`, `globalConfig.yml`)\\r\\n\\r\\n#### 2. **Install Java**\\r\\n\\r\\nSCIM server requires Java to function. Follow these steps to install and configure Java:\\r\\n\\r\\n1. Download Java 1.8 (64-bit version) from [here](https://www.oracle.com/java/technologies/javase-downloads.html).\\r\\n2. After installing Java, set the `%JAVA_HOME%` environment variable:\\r\\n    - Open **System Properties > Advanced > Environment Variables**.\\r\\n    - Add `C:\\\\Program Files\\\\Java\\\\bin` to the system\'s path.\\r\\n\\r\\n#### 3. **Pre-installation Configuration**\\r\\n\\r\\nBefore proceeding with the SCIM installation, configure the environment variables and ensure system readiness:\\r\\n\\r\\n1. **Configure PACLI Path**:\\r\\n    - In the system environment variables, append the PACLI path to the system\'s `Path` variable: `C:\\\\CyberArk-SCIM\\\\PACLI`.\\r\\n\\r\\n2. **Enable CyberArk Vault Platform**:\\r\\n    - Log in to the CyberArk PVWA as an admin.\\r\\n    - Navigate to **Administration > Platform Management** and activate the CyberArk Vault platform.\\r\\n\\r\\n#### 4. **Install and Configure SCIM Server**\\r\\n\\r\\n1. Open a command prompt as an administrator and navigate to the `C:\\\\CyberArk-SCIM` directory.\\r\\n2. Run the SCIM installation command:\\r\\n   ```bash\\r\\n   SCIMInstaller.exe -SailPoint\\r\\n   ```\\r\\n   **Note**: The `-SailPoint` flag is case-sensitive.\\r\\n\\r\\n3. Follow the installation prompts, including entering the necessary Vault and SCIM configuration parameters from your pre-installation checklist.\\r\\n\\r\\n#### 5. **Configure SailPoint to Communicate with SCIM Server**\\r\\n\\r\\n1. Create a privileged account in the CyberArk Vault for SailPoint integration.\\r\\n    - This account will be used by SailPoint to authenticate against the CyberArk SCIM server.\\r\\n\\r\\n2. Modify the `globalConfig.yml` in the CyberArk-SCIM folder to reflect the SailPoint-specific configurations.\\r\\n\\r\\n3. In SailPoint, configure a new CyberArk application in **IdentityIQ** using the following information:\\r\\n    - **SCIM Server URL**: `http://<SCIM_Server_IP>:8080/CyberArk/scim/v2/`\\r\\n    - **Authentication**: Use basic authentication with the SailPoint-user account created in CyberArk.\\r\\n\\r\\n#### 6. **Testing the SCIM Server**\\r\\n\\r\\nTest the SCIM server by accessing the Swagger UI:\\r\\n\\r\\n1. Open a browser and navigate to:\\r\\n   ```\\r\\n   http://<SCIM_Server_IP>:8080/swagger\\r\\n   ```\\r\\n\\r\\n2. Test basic SCIM operations, such as querying users and groups, to ensure the server is operational and configured correctly.\\r\\n\\r\\n3. Alternatively, use the following `curl` command to test connectivity:\\r\\n   ```bash\\r\\n   curl -u SailPoint-user:<password> http://<SCIM_SERVER_IP>:8080/CyberArk/scim/v2/ResourceTypes\\r\\n   ```\\r\\n\\r\\n#### 7. **Configure OAuth for Secure Authentication (Optional)**\\r\\n\\r\\nIf you want to integrate OAuth for additional security, configure it in the `globalConfig.yml`:\\r\\n\\r\\n1. In SailPoint, generate the required client ID and secret for OAuth authentication.\\r\\n2. Update the `globalConfig.yml` with your OAuth provider\'s details (e.g., Azure AD or Okta):\\r\\n   ```yaml\\r\\n   oauth2:\\r\\n     jwksURI: \\"https://login.microsoftonline.com/<tenant-id>/discovery/v2.0/keys\\"\\r\\n     issuer: \\"https://login.microsoftonline.com/<tenant-id>/v2.0\\"\\r\\n     usernameField: \\"preferred_username\\"\\r\\n   ```\\r\\n\\r\\n3. Restart the SCIM server to apply the changes.\\r\\n\\r\\n---\\r\\n\\r\\n### Conclusion\\r\\n\\r\\nBy following these steps, you can integrate SailPoint IdentityIQ with CyberArk using the SCIM server without relying on the AIM Credential Provider. This setup allows you to manage privileged accounts and users seamlessly through SailPoint\'s PAM module, ensuring secure and efficient access management.\\r\\n\\r\\n---\\r\\n\\r\\n### Additional Resources\\r\\n\\r\\n- [CyberArk SCIM Server Documentation](https://cyberark.com)\\r\\n- [SailPoint IdentityIQ PAM Integration Guide](https://sailpoint.com)"},{"id":"/2024/07/22/sailpoint-teams-integration","metadata":{"permalink":"/iam/blog/2024/07/22/sailpoint-teams-integration","source":"@site/blog/2024-07-22-sailpoint-teams-integration.md","title":"Configuring a Private Server for IdentityIQ\'s Microsoft Teams Service Code","description":"Configuring a Private Server for IdentityIQ\'s Microsoft Teams Service Code","date":"2024-07-22T00:00:00.000Z","tags":[],"readingTime":3.81,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"post","title":"Configuring a Private Server for IdentityIQ\'s Microsoft Teams Service Code"},"unlisted":false,"prevItem":{"title":"Integrating SailPoint with CyberArk Using SCIM Server Without AIM Credential Provider","permalink":"/iam/blog/2024/09/19/Sailpoint-CyberArk-Integration"},"nextItem":{"title":"Two Main Tasks in Configuring a PAM Application","permalink":"/iam/blog/2024/07/19/sailpoint-pam-integration"}},"content":"## Configuring a Private Server for IdentityIQ\'s Microsoft Teams Service Code\\r\\n\\r\\nThe sources provide a detailed explanation of how to configure a private server to host IdentityIQ\'s service code for Microsoft Teams integration. Here\'s a breakdown of the process and key recommendations:\\r\\n\\r\\n### Server Selection and Setup:\\r\\n\\r\\n*   **Dedicated Server:** SailPoint strongly recommends using a separate, private server to run the IdentityIQ service code, distinct from the IdentityIQ application server. This enhances security by preventing direct internet exposure of the IdentityIQ server.\\r\\n*   **Operating System Support:** The Microsoft Teams bot is compatible with all currently supported Windows and Linux versions. Choose the operating system that best suits your environment and expertise.\\r\\n\\r\\n### Network Connectivity and Security:\\r\\n\\r\\n*   **Public IP and DNS Resolution:** Ensure the private server has a public IP address that\'s publicly resolvable via DNS. This allows Microsoft Teams to establish a connection to the service code.\\r\\n*   **HTTPS and Valid Certificate:** Enable HTTPS on the private server and install a valid SSL certificate from a Microsoft-trusted Certificate Authority. This establishes a secure communication channel and is essential for Microsoft Teams to trust the service code. Self-signed certificates are not supported.\\r\\n*   **Firewall Configuration:** Configure your firewall to allow inbound traffic on the designated HTTPS port for the service code. This ensures Microsoft Teams can reach the service code without any blocks.\\r\\n\\r\\n### Service Code Installation and Configuration:\\r\\n\\r\\n1.  **Download Platform-Specific Package:** Download the appropriate service code package for your chosen operating system (Windows or Linux) from Compass.\\r\\n2.  **Extract and Configure Environment File:** Extract the downloaded zip file on the private server. Locate the `env.template` file and create a copy named `.env`. This file contains environment variables that need configuration.\\r\\n3.  **Configure Essential Parameters:** Edit the `.env` file with the following crucial parameters:\\r\\n    *   `PUBLIC_HOSTNAME`: Set this to the public DNS hostname of your service code, resolvable to the private server\'s IP address.\\r\\n    *   `LOCAL_HOSTNAME`:  Enter the private IP address of the server where the service code runs.\\r\\n    *   `PUBLIC_PORT` and `PRIVATE_PORT`: Specify the desired public and private ports for hosting the service code. The default values can be modified as needed.\\r\\n    *   `TENANT_ID`: Input your Azure tenant ID.\\r\\n    *   `APP_ID`:  Enter the Application (client) ID of your Microsoft Teams app from Azure.\\r\\n    *   `APP_NAME`: Provide the name of your Microsoft Teams app.\\r\\n    *   `SSO_CONNECTION_NAME`:  Input the name you assigned to the OAuth connection setting while configuring the Azure bot.\\r\\n    *   `ENCRYPTION_SECRET`: Set an 8-character secret for encrypting sensitive data.\\r\\n    *   `IIQ_URL`:  Enter the full URL of your IdentityIQ installation, including the protocol, hostname, port, and context path. Use the load balancer URL if applicable.\\r\\n4.  **Encrypt and Set App Secret:**  Start the service code and use the provided encryption endpoint (`https://<private IP>:<private port>/util/encrypt`) to encrypt your Microsoft Teams app secret.  Set the encrypted value as `APP_SECRET` in the `.env` file.\\r\\n5.  **Certificate and Key Configuration:**\\r\\n    *   Create a dedicated directory (`cert`) within the service code directory to store the SSL certificate and private key.\\r\\n    *   Obtain the SSL certificate and private key files from your certificate provider.\\r\\n    *   Place the certificate file (e.g., `certificate.crt`) and private key file (e.g., `private.key`) inside the `cert` directory.\\r\\n    *   Encrypt the certificate and private key using the encryption endpoint mentioned in the previous step.\\r\\n    *   Update the `.env` file with the encrypted certificate and key values:\\r\\n        *   `BOT_CERTIFICATE`: Encrypted certificate value.\\r\\n        *   `BOT_KEY`: Encrypted private key value.\\r\\n6.  **Permissions and Ownership:**\\r\\n    *   Set strict read and write permissions on the `cert` directory, granting access only to the owner of the service code process. This enhances the security of your sensitive key material.\\r\\n7.  **Start and Verify Service Code:**  Start the IdentityIQ service code. You should see log messages indicating a successful start and connection to Azure services. Verify that the bot responds correctly to commands within Microsoft Teams.\\r\\n\\r\\n### Additional Considerations:\\r\\n\\r\\n*   **Microsoft Azure Configuration:**  The sources emphasize that successful integration requires specific configurations within Microsoft Azure, such as creating an API application, a Microsoft Teams application, and an Azure bot. The provided steps outline the required settings and values to ensure seamless communication between IdentityIQ and Microsoft Teams.\\r\\n*   **Security Best Practices:**  The sources recommend following security best practices throughout the configuration process. This includes using strong encryption for sensitive data, restricting file permissions, and regularly reviewing security settings.\\r\\n\\r\\nThis comprehensive guide to configuring a private server for IdentityIQ\'s Microsoft Teams service code is based entirely on the information available within the provided sources. Remember to consult the Microsoft Teams documentation and your IT security team for any platform-specific or security-related considerations."},{"id":"/2024/07/19/sailpoint-pam-integration","metadata":{"permalink":"/iam/blog/2024/07/19/sailpoint-pam-integration","source":"@site/blog/2024-07-19-sailpoint-pam-integration.md","title":"Two Main Tasks in Configuring a PAM Application","description":"Two Main Tasks in Configuring a PAM Application","date":"2024-07-19T00:00:00.000Z","tags":[],"readingTime":1.365,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"post","title":"Two Main Tasks in Configuring a PAM Application"},"unlisted":false,"prevItem":{"title":"Configuring a Private Server for IdentityIQ\'s Microsoft Teams Service Code","permalink":"/iam/blog/2024/07/22/sailpoint-teams-integration"},"nextItem":{"title":"Lifecycle Events in SailPoint IdentityIQ","permalink":"/iam/blog/2024/07/16/sailpoint-lifecycle-events"}},"content":"## Two Main Tasks in Configuring a PAM Application\\r\\n\\r\\nThe two main tasks for configuring a Privileged Account Management (PAM) application in IdentityIQ are:\\r\\n\\r\\n1.  **Configuring a PAM Application:** This task involves setting up a connection between IdentityIQ and your PAM vendor\'s system to aggregate data on PAM accounts, groups, vaults, and permissions.\\r\\n\\r\\n    *   This process utilizes a PAM-specific application (connector) type called \\"Privileged Account Management\\".\\r\\n    *   You need to configure the application to include both a **connector** and a **target collector**:\\r\\n        *   The **connector** is responsible for aggregating users, groups, and containers into IdentityIQ.\\r\\n        *   The **target collector** reads in permissions users have on containers, and can write permissions back to the target system.\\r\\n    *   The PAM connector, based on IdentityIQ\'s SCIM 2.0 connector, requires configuration details like Base URL and authentication methods (OAuth2.0, API Token, or Basic Authentication).\\r\\n2.  **Configuring PAM Global Settings:** This task focuses on setting up global options for the PAM module within IdentityIQ.\\r\\n\\r\\n    *   These settings control aspects like how PAM containers can be modified within IdentityIQ.\\r\\n    *   You can define whether to allow adding/removing identities and privileged items in PAM containers, and whether to enable owners to modify PAM containers.\\r\\n    *   Global settings also dictate the business process used for provisioning PAM identities. You can either utilize the standard LCMManage Passwords business process or define a custom workflow of type LCMProvisioning.\\r\\n\\r\\nThese two tasks are essential for setting up the PAM module in IdentityIQ. While these tasks establish the foundation for PAM integration, the sources also highlight additional configurations related to credential cycling, Rapid Setup processes, and task management for aggregation, indexing, and refreshing PAM data."},{"id":"/2024/07/16/sailpoint-lifecycle-events","metadata":{"permalink":"/iam/blog/2024/07/16/sailpoint-lifecycle-events","source":"@site/blog/2024-07-16-sailpoint-lifecycle-events.md","title":"Lifecycle Events in SailPoint IdentityIQ","description":"Lifecycle Events in SailPoint IdentityIQ","date":"2024-07-16T00:00:00.000Z","tags":[],"readingTime":2.52,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"post","title":"Lifecycle Events in SailPoint IdentityIQ"},"unlisted":false,"prevItem":{"title":"Two Main Tasks in Configuring a PAM Application","permalink":"/iam/blog/2024/07/19/sailpoint-pam-integration"},"nextItem":{"title":"Prerequisites for Enabling and Integrating SailPoint AI Services with IdentityIQ","permalink":"/iam/blog/2024/07/13/sailpoint-ai"}},"content":"### Lifecycle Events in SailPoint IdentityIQ\\r\\n\\r\\nIn IdentityIQ, **Lifecycle Events** represent activities that occur during an employee\'s tenure at a company, such as joining, changing roles, or leaving. These events, when triggered by specific changes to an identity (like attribute changes or creation), initiate **Business Processes** (workflows) that can include provisioning actions.\\r\\n\\r\\nHere\'s a breakdown of key aspects related to Lifecycle Events:\\r\\n\\r\\n*   **Pre-defined Lifecycle Events:** IdentityIQ provides four pre-defined Lifecycle Events, each linked to a specific trigger and default Business Process:\\r\\n    *   **Joiner:** Triggered upon identity creation. The default process simply logs the identity\'s name. Typically customized to provision initial access rights (birthright access).\\r\\n    *   **Leaver:** Triggered when the \\"Inactive\\" attribute changes from false to true. The default process disables all the leaving identity\'s accounts.\\r\\n    *   **Manager Transfer:** Triggered when an identity\'s manager changes. The default process logs the old and new managers\' names. Commonly customized to initiate a certification for the new manager to review the identity\'s access or provision access based on the new manager\'s group memberships.\\r\\n    *   **Reinstate:** Triggered when the \\"Inactive\\" attribute changes from true to false. The default process enables all previously disabled accounts of a returning identity.\\r\\n*   **Lifecycle Events and Rapid Setup:**  The **Rapid Setup** module simplifies the configuration of common Lifecycle Events like Joiner, Mover, and Leaver. It allows administrators to define event triggers, global actions, and per-application actions (like birthright role assignment). Rapid Setup offers a user-friendly interface for configuring these events without requiring in-depth workflow customization.\\r\\n*   **Custom Lifecycle Events:** You can create custom Lifecycle Events beyond the pre-defined ones to cater to specific organizational needs. These custom events offer flexibility in defining triggers, target identities, and associated workflows.\\r\\n*   **Lifecycle Events and Provisioning:**  Lifecycle Events are tightly integrated with IdentityIQ\'s provisioning engine. The Business Processes triggered by these events can contain provisioning actions, such as creating, modifying, enabling, disabling, or deleting accounts and entitlements.\\r\\n*   **Lifecycle Events Configuration:** You manage Lifecycle Events through the **Lifecycle Events** page (Setup &gt; Lifecycle Events). Here, you can:\\r\\n    *   **Create new Lifecycle Events:** Define a name, description, event type (Create, Manager Transfer, Attribute Change, Rule, Native Change, Alert), target identity population, and the triggering business process.\\r\\n    *   **Edit pre-defined Lifecycle Events:** Customize the default behavior of the provided events by modifying their associated Business Processes.\\r\\n*   **Monitoring Lifecycle Events:**  You can monitor the execution and outcomes of Lifecycle Events through various methods:\\r\\n    *   **Track My Requests:** Provides visibility into the access requests generated by Lifecycle Events, particularly those initiated through Rapid Setup workflows.\\r\\n    *   **Advanced Analytics:** Allows you to search and analyze audit data, including events related to Lifecycle Events (action: IdentityLifecycleEvent).\\r\\n    *   **Identity Events:** Offers a historical view of past events associated with an identity, including those triggered by Lifecycle Events.\\r\\n\\r\\nOverall, Lifecycle Events provide a powerful mechanism in IdentityIQ to automate identity management processes based on real-world events throughout an employee\'s lifecycle. By defining appropriate triggers and associating them with customized workflows, organizations can streamline access provisioning, de-provisioning, and other critical identity management tasks."},{"id":"/2024/07/13/sailpoint-ai","metadata":{"permalink":"/iam/blog/2024/07/13/sailpoint-ai","source":"@site/blog/2024-07-13-sailpoint-ai.md","title":"Prerequisites for Enabling and Integrating SailPoint AI Services with IdentityIQ","description":"Prerequisites for Enabling and Integrating SailPoint AI Services with IdentityIQ","date":"2024-07-13T00:00:00.000Z","tags":[],"readingTime":2.23,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"post","title":"Prerequisites for Enabling and Integrating SailPoint AI Services with IdentityIQ"},"unlisted":false,"prevItem":{"title":"Lifecycle Events in SailPoint IdentityIQ","permalink":"/iam/blog/2024/07/16/sailpoint-lifecycle-events"},"nextItem":{"title":"Activity Data Source in SailPoint IdentityIQ","permalink":"/iam/blog/2024/07/10/sailpoint-activity-datasource"}},"content":"## Prerequisites for Enabling and Integrating SailPoint AI Services with IdentityIQ\\r\\n\\r\\nTo successfully enable and integrate SailPoint AI Services with your IdentityIQ instance, several prerequisites must be met. These prerequisites can be categorized as:\\r\\n\\r\\n**1.  IdentityIQ Environment:**\\r\\n\\r\\n*   **Plugins Enabled:** Ensure that plugins are enabled in your IdentityIQ instance. This is essential for installing the AI Services Recommender Plugin. Verify that the `plugins.enabled=true` setting is present in the `identityiq_home/WEB-INF/classes/iiq.properties` file.\\r\\n*   **Default hbm.xml Fields:** Refrain from removing any default fields from the various `.hbm.xml` files (like `IdentityExtended.hbm.xml` or `LinkExtended.hbm.xml`), even if you\'ve customized extended and searchable attributes. Removing default fields will prevent AI Services from functioning correctly. You are free to add custom fields as needed.\\r\\n\\r\\n**2. IdentityNow Tenant:**\\r\\n\\r\\n*   **Active IdentityNow Tenant:**  You need an active IdentityNow tenant to integrate AI Services with IdentityIQ, as SailPoint\'s AI Services are part of the IdentityNow platform. This tenant will facilitate data exchange and analysis.\\r\\n*   **Client Credentials:** Generate OAuth client credentials (Client ID and Client Secret) within your IdentityNow tenant for the AI Services Recommendation API. These credentials are crucial for secure communication between IdentityIQ and AI Services.\\r\\n\\r\\n**3. Network and Connectivity:**\\r\\n\\r\\n*   **AI Services Virtual Appliance:** An AI Services Virtual Appliance is deployed for communication between IdentityIQ and AI Services. This appliance requires specific network configurations to facilitate data transfer.\\r\\n*   **Firewall Configuration:**  Configure your firewall to allow outbound HTTPS traffic from your IdentityIQ instance to the AI Services Virtual Appliance. This ensures uninterrupted communication for data sharing and recommendation retrieval.\\r\\n\\r\\n**4. IBM JDK and WebSphere Configuration (If Applicable):**\\r\\n\\r\\n*   **TLS 1.2 Support:** If your IdentityIQ deployment utilizes IBM JDK or WebSphere, ensure that your JVM arguments include `-Dcom.ibm.jsse2.overrideDefaultTLS=true`. This enables TLS version 1.2 support, which is necessary for connecting to AI Services in such environments.\\r\\n\\r\\n**5.  Additional Considerations:**\\r\\n\\r\\n*   **Onboarding Process:** Familiarize yourself with the AI Services onboarding process, which outlines the steps for connecting your IdentityIQ instance to AI Services and configuring the necessary settings. This process is essential for seamless integration and data synchronization.\\r\\n*   **Deployment Steps:** Review and understand the deployment steps outlined in the \\"Getting Started with AI-Driven Identity Security for IdentityIQ\\" guide. These steps provide a roadmap for successfully deploying and configuring AI Services within your IdentityIQ environment.\\r\\n*   **Licensing:** AI Services modules may require separate licensing.  Consult your account manager to confirm your licensing agreement and ensure you have the necessary permissions to access and utilize AI Services.\\r\\n\\r\\n**Remember:**  These prerequisites assume a standard deployment of IdentityIQ. Your specific configuration, environment, and integration requirements might necessitate additional steps or considerations. Always refer to the official SailPoint documentation and consult with SailPoint support for guidance tailored to your unique setup."},{"id":"/2024/07/10/sailpoint-activity-datasource","metadata":{"permalink":"/iam/blog/2024/07/10/sailpoint-activity-datasource","source":"@site/blog/2024-07-10-sailpoint-activity-datasource.md","title":"Activity Data Source in SailPoint IdentityIQ","description":"Discussion on Activity Data Source","date":"2024-07-10T00:00:00.000Z","tags":[],"readingTime":3.19,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"post","title":"Activity Data Source in SailPoint IdentityIQ"},"unlisted":false,"prevItem":{"title":"Prerequisites for Enabling and Integrating SailPoint AI Services with IdentityIQ","permalink":"/iam/blog/2024/07/13/sailpoint-ai"},"nextItem":{"title":"Special Considerations in IdentityIQ","permalink":"/iam/blog/2024/07/07/iiq-special-considerations"}},"content":"## Discussion on Activity Data Source\\r\\n\\r\\nIn IdentityIQ, an **Activity Data Source** is a source of information about actions taken by users on applications. This activity information is collected, normalized, and stored by IdentityIQ to enable the monitoring and analysis of user behavior.\\r\\n\\r\\nHere are some key aspects of Activity Data Sources:\\r\\n\\r\\n*   **Purpose:** Activity Data Sources provide the raw data for IdentityIQ\'s activity monitoring and reporting capabilities. This data is used to:\\r\\n    *   **Track User Actions:**  Monitor activities such as logins, file accesses, data modifications, and other application-specific events.\\r\\n    *   **Detect Anomalies and Risks:** Identify unusual or suspicious activity patterns that might indicate security breaches, policy violations, or insider threats.\\r\\n    *   **Support Compliance Requirements:** Generate reports and provide audit trails to demonstrate compliance with regulatory frameworks and internal policies.\\r\\n*   **Types of Activity Data Sources:** IdentityIQ supports various types of Activity Data Sources, catering to different application environments and log formats. Some common types include:\\r\\n    *   **JDBC Collector:** Collects activity data from relational databases that support JDBC connectivity. This collector requires configuring JDBC connection parameters (connection URL, driver class, username, password) and SQL queries to retrieve relevant activity data.\\r\\n    *   **Windows Event Log Collector:** Retrieves activity data from Windows event logs. This collector necessitates specifying connection details like the event log server, user credentials, and an MQL query to filter the desired events.\\r\\n    *   **Log File Collector:**  Gathers activity data from log files stored on various systems. This collector supports different transport mechanisms (local, FTP, SCP) to access log files and requires specifying file names, lines to skip, regular expressions for parsing, and log field definitions.\\r\\n    *   **RACF Audit Log Collector:** Extracts activity data from RACF (Resource Access Control Facility) audit logs, commonly used in IBM mainframe environments. This collector, similar to the Log File Collector, supports local, FTP, and SCP transports for accessing log files.\\r\\n    *   **CEF Log File:**  Collects data from log files in the Common Event Format (CEF), a standardized log format used by various security information and event management (SIEM) systems.\\r\\n*   **Activity Data Source Configuration:** You manage Activity Data Sources through the **Activity Data Source Configuration** page, accessible from the **Application Configuration** page. This page allows you to:\\r\\n    *   **Add or Edit Data Sources:**  Define a descriptive name, provide a brief explanation of the data source, and select the appropriate **Activity Data Source Type** from the available options.\\r\\n    *   **Configure Type-Specific Settings:**  Input the necessary connection and query settings for the chosen data source type, as detailed in the previous point about types of Activity Data Sources.\\r\\n    *   **Define Transformation and Correlation Rules:** Specify rules to transform raw activity data into a format usable by IdentityIQ and correlate it with identities in the system. The **Transformation Rule** converts the collected data, while the **Correlation Rule** establishes links between activities and identities.\\r\\n*   **Activity Targets:** Within each Activity Data Source, you can define **Activity Targets**. These targets represent specific objects within the data source that are acted upon, such as machine names for logins or file names for file accesses.  Activity Targets are used to:\\r\\n    *   **Focus Activity Searches:**  Allow administrators to generate searches for activity information on specific targets within a data source.\\r\\n    *   **Create Activity Target Categories:**  Enable the grouping of targets from multiple applications into categories, simplifying activity monitoring across related systems.\\r\\n*   **Activity Aggregation Task:**  The actual process of collecting, transforming, correlating, and storing activity data is performed by the **Activity Aggregation** task. This task can be scheduled to run periodically, ensuring that IdentityIQ\'s activity data is up-to-date.\\r\\n\\r\\nActivity Data Sources form the backbone of IdentityIQ\'s ability to monitor and analyze user behavior across diverse applications. By configuring appropriate Activity Data Sources, defining relevant Activity Targets, and scheduling regular Activity Aggregation tasks, organizations can gain valuable insights into user activity, enhance their security posture, and meet their compliance obligations."},{"id":"/2024/07/07/iiq-special-considerations","metadata":{"permalink":"/iam/blog/2024/07/07/iiq-special-considerations","source":"@site/blog/2024-07-07-iiq-special-considerations.md","title":"Special Considerations in IdentityIQ","description":"Special Considerations in IdentityIQ","date":"2024-07-07T00:00:00.000Z","tags":[],"readingTime":2.335,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"post","title":"Special Considerations in IdentityIQ"},"unlisted":false,"prevItem":{"title":"Activity Data Source in SailPoint IdentityIQ","permalink":"/iam/blog/2024/07/10/sailpoint-activity-datasource"},"nextItem":{"title":"Key Capabilities and Functionality Extensions of SailPoint\'s Plugin Framework","permalink":"/iam/blog/2024/07/04/Key-Capabilities"}},"content":"### Special Considerations in IdentityIQ\\r\\n\\r\\nThe sources provide several special considerations related to configuring and managing IdentityIQ:\\r\\n\\r\\n*   **Database Encryption for Sqlserver JDBC Driver (Installation Guide):** When using Sqlserver JDBC driver versions 10.2 and later, ensure that the Sqlserver database is encrypted. If connecting to an unencrypted database, explicitly add  `encrypt=false` to the JDBC URLs within the `iiq.properties` file.\\r\\n*   **Java System Properties (Installation Guide):**  You may need to configure specific Java system properties, like proxy settings (`http.proxyHost`, `http.proxyPort`, etc.), for IdentityIQ to interact with external systems or services. Consult the documentation for your specific application server (e.g., Apache Tomcat) to understand how to add Java system properties to the environment. For instance, in Tomcat, you would define the `JAVA_OPTS` environment variable in the  `bin\\\\catalina.bat` or `bin/catalina.sh` file.\\r\\n*   **Message Broker for Data Extract and Access History (Installation Guide):** Starting with version 8.4, IdentityIQ requires a message broker for the Data Extract and Access History features. While the installation defaults to an Embedded Broker service running an embedded ActiveMQ instance on port 61616, it is recommended to disable this and use an external broker instead. External brokers offer better administration features, message throughput tracking, and statistics.\\r\\n*   **Database-Specific Column Sizes for Extended Attributes (Installation Guide):** When extending IdentityIQ objects by adding custom attributes, be mindful of database-specific column size limitations. The comments at the beginning of the `IdentityExtended.hbm.xml` file provide guidance on these considerations. Several XML files (`IdentityExtended.hbm.xml`, `LinkExtended.hbm.xml`, etc.) are used to define extended attributes for different object types within IdentityIQ.\\r\\n*   **Character Considerations for the IdentityIQ Password Policy (Password Management):**  When configuring the password policy specifically for IdentityIQ internal passwords, you have unique settings to define allowable character types (Digits, Uppercase, Lowercase/Non-English, Special Characters). Leaving these fields empty permits all characters. You can also set the password expiration duration for manually set passwords (through the Edit Preferences window) using the \\"Days until expiration for manually set passwords\\" option.\\r\\n*   **Special Characters in Multi-language Descriptions (System Configuration):**  When using multi-language description files, ensure that escaped HTML characters are formatted correctly to display as intended. For instance, to display text in bold, use  `<b>test</b>` instead of just `test`. Similarly, use  `&lt;test&gt;`  to display  `<test>`  correctly. Failure to format escaped characters properly can result in unexpected display issues within descriptions.\\r\\n*   **Case Sensitivity in Native Change Detection (Release Notes):**  IdentityIQ includes a new option,  `detectNativeIdentityChangeCaseSensitive`, which defaults to  `false`. Enabling this option triggers a `NativeIdentityChangeEvent` even when the native identifier for an Account or Group differs only by case from the value stored in IdentityIQ.  This can impact performance, so consider the implications before enabling it. You can enable this option by adding it to the Attributes Map of the System Configuration.\\r\\n\\r\\nThese considerations highlight specific configuration settings, database interactions, and potential issues related to managing IdentityIQ effectively."},{"id":"/2024/07/04/Key-Capabilities","metadata":{"permalink":"/iam/blog/2024/07/04/Key-Capabilities","source":"@site/blog/2024-07-04-Key-Capabilities.md","title":"Key Capabilities and Functionality Extensions of SailPoint\'s Plugin Framework","description":"Key Capabilities and Functionality Extensions of SailPoint\'s Plugin Framework","date":"2024-07-04T00:00:00.000Z","tags":[],"readingTime":2.375,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"post","title":"Key Capabilities and Functionality Extensions of SailPoint\'s Plugin Framework"},"unlisted":false,"prevItem":{"title":"Special Considerations in IdentityIQ","permalink":"/iam/blog/2024/07/07/iiq-special-considerations"},"nextItem":{"title":"Initial Operations for a Fresh Production IIQ Deployment","permalink":"/iam/blog/2024/07/01/Initial-Operations"}},"content":"## Key Capabilities and Functionality Extensions of SailPoint\'s Plugin Framework\\r\\n\\r\\nThe SailPoint Plugin Framework offers several key capabilities that allow you to extend the functionality of IdentityIQ. Here\'s a breakdown:\\r\\n\\r\\n**Extensibility:**\\r\\n\\r\\n*   **Class path isolation on the server side:** This allows developers to leverage any third-party libraries or technologies for REST endpoints, background services, or Java classes called from scripts.\\r\\n*   **JavaScript isolation on the client side:**  Plugin developers can utilize any third-party client-side libraries without conflicts.\\r\\n*   **Core code protection:** The framework ensures that plugins cannot override or modify the behavior of IdentityIQ\'s backend code, ensuring security and facilitating smooth upgrades.\\r\\n\\r\\n**Integration:**\\r\\n\\r\\n*   **Web service extensions:**  Developers can create custom REST endpoints to exchange data between their plugins and the IdentityIQ data model.\\r\\n*   **Plugin database access:** Plugins can create and manage their own database tables within IdentityIQ, providing persistent storage for plugin-specific data.\\r\\n\\r\\n**UI Enhancements:**\\r\\n\\r\\n*   **Plugin installation and removal:** Plugins can be dynamically installed and removed, offering a user-friendly drag-and-drop experience or requiring installation before IdentityIQ starts.\\r\\n*   **UI Customization:** Plugins can include user interface elements like:\\r\\n    *   **Full-page applications:** Create entirely new pages within IdentityIQ.\\r\\n    *   **Snippets:** Inject small pieces of code to modify existing IdentityIQ user interface pages, such as adding menu options or buttons.\\r\\n    *   **Widgets:** Develop reusable UI components that users can add to their IdentityIQ home pages.\\r\\n*   **SailPoint Angular components:** Plugins can leverage the SailPoint Angular library to implement UI elements consistent with the IdentityIQ design, providing a seamless user experience.\\r\\n\\r\\n**Business Logic Implementation:**\\r\\n\\r\\n*   **Plugin Java Classes:** Developers can write Java classes to implement custom logic, including:\\r\\n    *   **REST Classes:**  Extend IdentityIQ\'s REST API by creating custom endpoints to handle specific actions.\\r\\n    *   **Plugin Executors:**  Implement background tasks, services, or policies that can be invoked within IdentityIQ.\\r\\n\\r\\n**Security and Permissions:**\\r\\n\\r\\n*   **Plugin authorization:** Control access to plugin functionality by defining custom Capabilities and SPRights.  This allows you to restrict access to UI components and secure REST endpoints.\\r\\n\\r\\n**Examples of Plugin Use Cases:**\\r\\n\\r\\n*   **Integrating with a third-party service desk system (e.g., BMC Remedyforce) to create and track tickets for provisioning requests.** The sources mention several Service Desk Integration Modules, including ones for BMC Helix Remedyforce, a generic one, and one for Cherwell. This indicates that creating plugins to interact with service desk solutions is a common use case.\\r\\n*   **Building a custom reporting dashboard to visualize IdentityIQ data in a specific way.** While not explicitly mentioned, the sources provide extensive information on customizing reports in IdentityIQ, suggesting that plugins could be used to extend reporting capabilities even further.\\r\\n*   **Developing a custom workflow to automate a specific business process related to identity management.** The sources highlight the use of plugins for custom tasks and executors, which can be used to create and manage custom workflows within IdentityIQ.\\r\\n\\r\\nThis response draws exclusively from the provided sources."},{"id":"/2024/07/01/Initial-Operations","metadata":{"permalink":"/iam/blog/2024/07/01/Initial-Operations","source":"@site/blog/2024-07-01-Initial-Operations.md","title":"Initial Operations for a Fresh Production IIQ Deployment","description":"Initial Operations for a Fresh Production IIQ Deployment","date":"2024-07-01T00:00:00.000Z","tags":[],"readingTime":2.785,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"post","title":"Initial Operations for a Fresh Production IIQ Deployment"},"unlisted":false,"prevItem":{"title":"Key Capabilities and Functionality Extensions of SailPoint\'s Plugin Framework","permalink":"/iam/blog/2024/07/04/Key-Capabilities"}},"content":"## Initial Operations for a Fresh Production IIQ Deployment\\r\\n\\r\\nSailPoint offer a structured approach to deploying a fresh production instance of IdentityIQ, focusing heavily on the initial setup and configuration process. Here\'s a consolidated list of initial operations based on the sources:\\r\\n\\r\\n### System Preparation & Installation\\r\\n\\r\\n*   **Install & Deploy IdentityIQ:** Follow the detailed instructions in the *IdentityIQ Installation Guide*.\\r\\n*   **Create Databases:** Create separate databases for IdentityIQ and Access History, even if you don\'t plan to use the Access History feature initially. Separate instances are recommended for performance reasons.\\r\\n*   **Secure Database Connection:** Use the `iiq encrypt <password>` command to encrypt the database password for enhanced security.\\r\\n*   **Import Initial Configuration:** Import essential configuration objects using the IdentityIQ console:\\r\\n    *   Use `import init.xml` for core IdentityIQ objects.\\r\\n    *   Use `import init-lcm.xml` to activate Lifecycle Manager features.\\r\\n    *   Import `init-ai.xml` for AI Services integration.\\r\\n    *   Import `init-cam.xml` for Cloud Access Management integration.\\r\\n*   **Start Application Server:** Start your chosen application server (e.g., Tomcat, JBoss, WebLogic) after configuration.\\r\\n\\r\\n### System Configuration\\r\\n\\r\\n*   **Access IdentityIQ:** Open a web browser and navigate to your IdentityIQ installation URL (e.g., `http://localhost:8080/identityiq` for a default Tomcat installation).\\r\\n*   **Log in with Default Credentials:** Use the default user ID `spadmin` and password `admin` for initial access.\\r\\n*   **Configure Global Settings:** Access Global Settings through the gear icon in the Navigation bar. Key configurations include:\\r\\n    *   **IdentityIQ Configuration:** Set defaults for notifications, work items, object expiration, UI preferences, and identity history.\\r\\n    *   **Login Configuration:** Configure authentication settings, including optional integration with an external authentication system.\\r\\n    *   **Identity and Account Mappings:** Define how IdentityIQ correlates identity data and account attributes from various sources.\\r\\n    *   **Rapid Setup Configuration:**  Enable and configure global options for Rapid Setup, a streamlined approach to managing joiners, movers, leavers, and identity termination processes.\\r\\n    *   **AI Services Configuration:** Connect to and configure AI Services for AI-driven identity security functionalities.\\r\\n    *   **Cloud Access Management Configuration:** Set up connection parameters and synchronize data with Cloud Access Management solutions.\\r\\n    *   **File Access Manager Configuration:** Configure integration with File Access Manager if this module is installed.\\r\\n*   **Configure Email Settings:**\\r\\n    *   Set up email redirection during initial setup for debugging purposes.\\r\\n    *   Configure email templates for various IdentityIQ events and notifications to match your organization\'s branding.\\r\\n*   **Configure Object Expiration:** Define retention policies for identity snapshots, task results, certifications, syslog events, and provisioning transactions.\\r\\n*   **Configure Auditing:** Review and adjust auditing options to meet your organization\'s requirements for tracking and reporting.\\r\\n\\r\\n### Additional Configurations (Optional)\\r\\n\\r\\n*   **Lifecycle Manager Activation:** If you\'ve purchased Lifecycle Manager, activate it by importing `init-lcm.xml`.\\r\\n*   **Rapid Setup:** Configure application-specific settings for joiners, movers, and leavers if using Rapid Setup.\\r\\n*   **Plugins:** Install and configure plugins to extend IdentityIQ\'s functionality beyond its core capabilities.\\r\\n*   **Single Sign-On:** Configure single sign-on for seamless access to IdentityIQ from other applications.\\r\\n*   **Time Synchronization:** Ensure accurate event processing and reporting by synchronizing the IdentityIQ server time.\\r\\n\\r\\n### Post-Configuration Activities\\r\\n\\r\\n*   **Verify System Functionality:** Thoroughly test all configured features and integrations to ensure they operate as expected.\\r\\n*   **User Training:** Provide training to administrators and end-users on using the newly deployed IdentityIQ system.\\r\\n\\r\\nThis detailed breakdown of initial operations for a fresh production IIQ deployment is based on the information provided in the sources. Remember to consult the relevant documentation for your specific environment and requirements."}]}}')}}]);